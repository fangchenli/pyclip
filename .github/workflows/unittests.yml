on: [push, pull_request]

env:
  XDG_RUNTIME_DIR: "/tmp/github-workflows"

jobs:
  test_clipboard:
    name: test clipboard functionality
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            display_server: xorg
            xorg_display: :99
          - os: ubuntu-latest
            display_server: wayland
            wayland_display: wayland-0

    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: install-ubuntu-xorg
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.display_server == 'xorg' }}
        run: sudo apt update && sudo apt install -y xvfb xclip

      - name: install-ubuntu-wayland
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.display_server == 'wayland' }}
        run: |
          sudo apt update
          sudo apt install -y --no-install-recommends --no-install-suggests kwin-wayland kwin-wayland-backend-virtual wl-clipboard

      - name: setup python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'
          architecture: 'x64'

      - name: install
        run: |
          python -m pip install --upgrade .
          pip install .[test]

      - name: start xvfb
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.display_server == 'xorg' }}
        run: |
          sudo Xvfb ${{ matrix.xorg_display }} -screen 0 640x480x8 -nolisten tcp &

      - name: start kwin_wayland
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.display_server == 'wayland' }}
        run: |
          mkdir -p $XDG_RUNTIME_DIR
          kwin_wayland --virtual &

      - name: Run tests with coverage
        env: # Or as an environment variable
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_PARALLEL: "true"
          DISPLAY: ${{ matrix.xorg_display }}
          WAYLAND_DISPLAY: ${{ matrix.wayland_display }}
        run: |
          pip install --upgrade coverage
          coverage run -m pytest -vv

      - name: Coveralls
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          pip install --upgrade coveralls
          coveralls --service=github
